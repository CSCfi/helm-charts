apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    template.alpha.openshift.io/wait-for-ready: "true"
  name: mariadb
spec:
  replicas: 1
  selector:
    name: mariadb
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: mariadb
    spec:
      containers:
      - env:
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: {{ .Values.mariadb.name }}
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: {{ .Values.mariadb.name }}
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: {{ .Values.mariadb.name }}
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-root-password
              name: {{ .Values.mariadb.name }}
        image: {{ .Values.mariadb.image }}
        imagePullPolicy: IfNotPresent
        {{- if .Values.mariadb.livenessProbe.enabled }}
        livenessProbe:
          initialDelaySeconds: {{ .Values.mariadb.livenessProbe.initialDelaySeconds }}
          tcpSocket:
            port: 3306
          timeoutSeconds: {{ .Values.mariadb.livenessProbe.timeoutSeconds }}
        {{- end }}
        name: mariadb
        ports:
        - containerPort: 3306
        {{- if .Values.mariadb.readinessProbe.enabled }}
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE -e 'SELECT 1'
          initialDelaySeconds: {{ .Values.mariadb.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.mariadb.readinessProbe.timeoutSeconds }}
        {{- end }}
        resources:
          limits:
            memory: {{ .Values.mariadb.resources.limits.memory }}
        volumeMounts:
        - mountPath: /var/lib/mysql/data
          name: {{ .Values.mariadb.name }}-data
      volumes:
      - name: {{ .Values.mariadb.name }}-data
        persistentVolumeClaim:
          claimName: {{ .Values.mariadb.name }}
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - mariadb
      from:
        kind: ImageStreamTag
        name: {{ .Values.mariadb.imageStream.name }}:{{ .Values.mariadb.imageStream.tag }}
        namespace: {{ .Values.mariadb.imageStream.namespace }}
    type: ImageChange
  - type: ConfigChange

---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: matomo
  name: matomo
spec:
  replicas: 1
  selector:
    app: matomo
    deploymentconfig: matomo
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: matomo
        deploymentconfig: matomo
    spec:
      containers:
      - env:
          - name: MATOMO_USERNAME
            valueFrom:
              secretKeyRef:
                key: matomo-username
                name: {{ .Values.matomo.name }}
          - name: MATOMO_PASSWORD
            valueFrom:
              secretKeyRef:
                key: matomo-password
                name: {{ .Values.matomo.name }}
          - name: MATOMO_DATABASE_NAME
            valueFrom:
              secretKeyRef:
                key: database-name
                name: {{ .Values.mariadb.name }}
          - name: MATOMO_DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: {{ .Values.mariadb.name }}
          - name: MATOMO_DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: {{ .Values.mariadb.name }}
        image: {{ .Values.matomo.image }}
        imagePullPolicy: Always
        name: matomo
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: {{ .Values.matomo.name }}
          mountPath: "/etc/matomopass"
          readOnly: true
      volumes:
      - name: {{ .Values.matomo.name }}
        secret:
          defaultMode: 420
          secretName: {{ .Values.matomo.name }}
