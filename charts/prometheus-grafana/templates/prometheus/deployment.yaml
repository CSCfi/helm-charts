apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.prometheus.appName }}
  labels:
    app: {{ .Values.prometheus.appName }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.prometheus.appName }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.prometheus.appName }}
    spec:
      serviceAccount: {{ .Values.prometheus.appName }}-sa
      serviceAccountName: {{ .Values.prometheus.appName }}-sa
      initContainers:
      - image: docker-registry.rahti.csc.fi/da-images/alpine-htpasswd:latest
        env:
        - name: USER
          valueFrom:
            secretKeyRef:
              key: user
              name: {{ .Values.prometheus.appName }}-nginx-secret
        - name: PASS
          valueFrom:
            secretKeyRef:
              key: pass
              name: {{ .Values.prometheus.appName }}-nginx-secret
        command: ["/bin/sh","-c","htpasswd -bc /tmp/secret-file/passwd $USER $PASS"]
        name: htpasswd-generator
        volumeMounts:
          - name: {{ .Values.prometheus.appName }}-htpasswd-tmp
            mountPath: "/tmp/secret-file"
          - name: {{ .Values.prometheus.appName }}-nginx-secret
            mountPath: "/tmp/secret-env"
      containers:
      - name: {{ .Values.prometheus.appName }}
        args:
        - '--storage.tsdb.path=/data'
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.retention.time={{ .Values.prometheus.retentionTime }}'
        image: {{ .Values.prometheus.image }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9090
        resources:
          limits:
            memory: {{ .Values.prometheus.limits.memory }}
            cpu: 1
          requests:
            memory: {{ .Values.prometheus.requests.memory }}
            cpu: 1
        volumeMounts:
        - mountPath: /etc/prometheus
          name: {{ .Values.prometheus.appName }}-config
        - mountPath: /data
          name: {{ .Values.prometheus.appName }}-data
      - name: nginx
        image: cscfi/nginx-okd
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 300m
            memory: 512Mi
        ports:
          - containerPort: 9091
        volumeMounts:
          - name: {{ .Values.prometheus.appName }}-nginx-config
            mountPath: /etc/nginx
          - name: {{ .Values.prometheus.appName }}-htpasswd-tmp
            mountPath: /etc/nginx/secrets
      restartPolicy: Always
      volumes:
      - name: {{ .Values.prometheus.appName }}-config
        configMap:
          defaultMode: 420
          name: {{ .Values.prometheus.appName }}-config
      - name: {{ .Values.prometheus.appName }}-data
        persistentVolumeClaim:
          claimName: {{ .Values.prometheus.appName }}-data
      - name: {{ .Values.prometheus.appName }}-nginx-secret
        secret:
          secretName: {{ .Values.prometheus.appName }}-nginx-secret
      - name: {{ .Values.prometheus.appName }}-htpasswd-tmp
        emptyDir: {}
      - name: {{ .Values.prometheus.appName }}-nginx-config
        configMap:
          name: {{ .Values.prometheus.appName }}-nginx-config