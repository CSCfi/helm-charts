apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.prometheus.appName }}
  labels:
    app: {{ .Values.prometheus.appName }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.prometheus.appName }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.prometheus.appName }}
    spec:
      serviceAccount: {{ .Values.prometheus.appName }}-sa
      serviceAccountName: {{ .Values.prometheus.appName }}-sa
      containers:
      - name: {{ .Values.prometheus.appName }}
        args:
        - '--storage.tsdb.path=/data'
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.retention.time={{ .Values.prometheus.retentionTime }}'
        image: {{ .Values.prometheus.image }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9090
        resources:
          limits:
            memory: {{ .Values.prometheus.limits.memory }}
            cpu: 1
          requests:
            memory: {{ .Values.prometheus.requests.memory }}
            cpu: 1
        volumeMounts:
        - mountPath: /etc/prometheus
          name: {{ .Values.prometheus.appName }}-config
        - mountPath: /data
          name: {{ .Values.prometheus.appName }}-data
      restartPolicy: Always
      volumes:
      - name: {{ .Values.prometheus.appName }}-config
        configMap:
          defaultMode: 420
          name: {{ .Values.prometheus.appName }}-config
      - name: {{ .Values.prometheus.appName }}-data
        persistentVolumeClaim:
          claimName: {{ .Values.prometheus.appName }}-data
          