apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: {{ .Values.appName }}
  annotations:
    description: Defines how to build the application
    template.alpha.openshift.io/wait-for-ready: "true"
spec:
  resources:
    limits:
      memory: 2Gi
  source:
    type: Git
    git:
      uri: {{ .Values.buildConfig.gitRepoUri }}
      ref: {{ .Values.buildConfig.gitBranch }}
    contextDir: {{ .Values.buildConfig.contextDir }}
  strategy:
    type: Docker
  output:
    to:
      kind: ImageStreamTag
      name: {{ .Values.appName }}:latest
  triggers:
    - type: ImageChange
    - type: ConfigChange
    - github:
        secretReference:
          name: webhooksecret
      type: GitHub

---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: nginx-okd
  annotations:
    description: Defines how to build the application
    template.alpha.openshift.io/wait-for-ready: "true"
spec:
  source:
    dockerfile: |
      FROM nginx:alpine
      # support running as arbitrary user which belogs to the root group
      RUN chmod g+rwx /var/cache/nginx /var/run /var/log/nginx && \
          chown nginx.root /var/cache/nginx /var/run /var/log/nginx && \
          # users are not allowed to listen on priviliged ports
          sed -i.bak 's/listen\(.*\)80;/listen 8081;/' /etc/nginx/conf.d/default.conf && \
          # Make /etc/nginx/html/ available to use
          mkdir -p /etc/nginx/html/ && chmod 777 /etc/nginx/html/ && \
          # comment user directive as master process is run as user in OpenShift anyhow
          sed -i.bak 's/^user/#user/' /etc/nginx/nginx.conf && \
          # Increase the number of worker connections per process
          sed -i 's/worker_connections\s*1024/worker_connections 10240/' /etc/nginx/nginx.conf && \
          apk add apache2-utils && \
          mkdir /etc/nginx/secret/ && \
          chown nginx.root /etc/nginx/secret/ && \
          chmod g+w /etc/nginx/secret/
      WORKDIR /usr/share/nginx/html/
      EXPOSE 8081
      USER nginx:root
  strategy:
    type: Docker
  output:
    to:
      kind: ImageStreamTag
      name: nginx-okd:latest
  triggers:
    - type: ImageChange
    - type: ConfigChange
