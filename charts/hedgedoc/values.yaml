# Enable this to deploy a route and add securityContext
# Default: true
openshift:
  enabled: true

# If openshift.enabled    
route:
  insecureEdgeTerminationPolicy: Redirect
  termination: edge
  
# Parameters related to the deployment of HedgeDoc
hedgedoc:
  appname: my-hedgedoc
  domain: 2.rahtiapp.fi
  image: quay.io/hedgedoc/hedgedoc:1.10.0
  podSecurityContext: {}
  containerSecurityContext:
    allowPrivilegeEscalation: false
    runAsUser:
    runAsGroup:
    capabilities:
      drop:
      - ALL
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  pvc:
    storageSpace: 5Gi
  random_pw_secret_key: database-password # Used by random_pw_reusable function in _helpers.tpl
  # HANDLE WITH CARE!!!
  # These values are not meant to be changed.
  # If you want to change them, please refer to the comment next to each.
  secret:
    # Needed if postgresql.enabled=true
    databaseName: '{{ tpl .Values.postgresql.auth.database . }}' # Linked to postgresql.auth.database. EDIT postgresql.auth.database instead of this value!
    databaseUser: '{{ tpl .Values.postgresql.auth.username . }}' # Linked to postgresql.auth.username. EDIT postgresql.auth.username instead of this value!
    databasePassword: '' # Empty by default because the password is generated randomly and stored in a Secret. Replace this value if you want to add your custom password.
    password: '' # Empty by default because the password is generated randomly and stored in a Secret. Replace this value if you want to add your custom password.
    postgresPassword: '' # Empty by default because the password is generated randomly and stored in a Secret. Replace this value if you want to add your custom password.

# Parameters related to the deployment of PostgreSQL in Rahti.
# The parameters come from bitnami/postgresql dependency (https://github.com/bitnami/charts/tree/main/bitnami/postgresql)
postgresql:
  enabled: true

  auth:
    username: hedgedoc
    database: hedgedoc
    enablePostgresUser: true
    existingSecret: postgres

  tls:
    enabled: false
  
  # Use to remove the SCC and use the OpenShift SCC
  compatibility:
    openshift:
      adaptSecurityContext: force
    ## @param postgresql.primary.initdb.scripts [object] Map with init scripts for the PostgreSQL database
    initdb:
      scripts:
        # For authentication
        create_auth_db.sh: |
          #!/bin/bash
          PGPASSWORD=$POSTGRES_POSTGRES_PASSWORD psql -U postgres <<< "CREATE DATABASE {{ include "hedgedoc.v0.database-auth.name" . }}"
          PGPASSWORD=$POSTGRES_POSTGRES_PASSWORD psql -U postgres <<< "GRANT ALL PRIVILEGES ON DATABASE {{ include "hedgedoc.v0.database-auth.name" . }} to {{ .Values.auth.username }}"
          PGPASSWORD=$POSTGRES_POSTGRES_PASSWORD psql -U postgres <<< "ALTER DATABASE {{ include "hedgedoc.v0.database-auth.name" . }} OWNER TO {{ .Values.auth.username }}"

# Parameters related to the deployment of an external PostgreSQL (like Pukki)
postgresqlExternal:
  enabled: false
  externalDatabase: '0.0.0.0' # If using an external database, enter the DNS name or public IP
  secret:
    database-name: 'hedgedoc'
    database-user: 'hedgedoc'
    database-password: 'hedgedoc'
