name: Release Charts

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.12.1

      - name: Add Helm repo
        run: |
          helm repo add nats https://nats-io.github.io/k8s/helm/charts/ &&
          helm repo add bitnami https://charts.bitnami.com/bitnami &&
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts &&
          helm repo add grafana https://grafana.github.io/helm-charts &&
          helm repo add plausible https://imio.github.io/helm-charts &&
          helm repo update

      - name: Helm Dependency
        run: |
          for dir in $(ls -d charts/*); do
            helm dependency build $dir;
          done

#      - name: Helm Lint
#        run: |
#          for dir in $(ls -d charts/*); do
#            helm lint $dir
#          done
          
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          skip_existing: true
          pages_branch: main
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Copy index.yaml
        run: |
          cp .cr-index/index.yaml . || echo "No new index.yaml, using previous"

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
